name: Build React Native App

on:
  push:
    branches: [master]
    paths:
      - "AfterburnerControl/package.json"
      - "AfterburnerControl/package-lock.json"
      - "AfterburnerControl/android/**"
      - "AfterburnerControl/ios/**"
      - "AfterburnerControl/src/**"
  pull_request:
    branches: [master]
    paths:
      - "AfterburnerControl/package.json"
      - "AfterburnerControl/package-lock.json"
      - "AfterburnerControl/android/**"
      - "AfterburnerControl/ios/**"
      - "AfterburnerControl/src/**"
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      JAVA_HOME: /opt/hostedtoolcache/Java_Zulu_jdk/17.0.10-7/x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: AfterburnerControl/package-lock.json

      - name: Install dependencies
        working-directory: ./AfterburnerControl
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Verify Java and Android SDK
        run: |
          echo "Java version:"
          java -version
          echo ""
          echo "JAVA_HOME: $JAVA_HOME"
          echo ""
          echo "Android SDK location:"
          echo $ANDROID_HOME
          echo ""
          echo "Available Android SDK tools:"
          ls -la $ANDROID_HOME/cmdline-tools/latest/bin/

      - name: Make Gradle wrapper executable
        working-directory: ./AfterburnerControl/android
        run: |
          echo "Checking Android directory structure..."
          ls -la
          echo ""
          echo "Checking Gradle wrapper file..."
          ls -la gradlew
          echo ""
          echo "Making Gradle wrapper executable..."
          chmod +x gradlew
          echo ""
          echo "Verifying permissions..."
          ls -la gradlew
          echo ""
          echo "Testing Gradle wrapper..."
          ./gradlew --version

      - name: Build Android APK
        working-directory: ./AfterburnerControl
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          cd android
          ./gradlew assembleRelease --info
          cd ..

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: AfterburnerControl/android/app/build/outputs/apk/release/
          retention-days: 7

  build-ios:
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: AfterburnerControl/package-lock.json

      - name: Install dependencies
        working-directory: ./AfterburnerControl
        run: npm ci

      - name: Setup Xcode
        run: |
          echo "Available Xcode versions:"
          ls -la /Applications/ | grep Xcode
          echo ""
          echo "Current Xcode setup:"
          xcode-select --print-path
          xcodebuild -version
          echo ""
          echo "Setting Xcode to latest version..."
          if [ -d "/Applications/Xcode_16.1.app" ]; then
            sudo xcode-select --switch /Applications/Xcode_16.1.app
          elif [ -d "/Applications/Xcode_16.2.app" ]; then
            sudo xcode-select --switch /Applications/Xcode_16.2.app
          else
            echo "Using default Xcode version"
          fi
          echo ""
          echo "Verifying Xcode setup:"
          xcodebuild -version
          echo "Xcode path: $(xcode-select --print-path)"

      - name: Install iOS dependencies
        working-directory: ./AfterburnerControl/ios
        env:
          DEVELOPER_DIR: /Applications/Xcode_16.1.app/Contents/Developer
        run: |
          pod install --repo-update

      - name: List iOS schemes and simulators
        working-directory: ./AfterburnerControl/ios
        env:
          DEVELOPER_DIR: /Applications/Xcode_16.1.app/Contents/Developer
        run: |
          echo "Available schemes:"
          xcodebuild -list -workspace AfterburnerControl.xcworkspace
          echo ""
          echo "Available simulators:"
          xcrun simctl list devices available | grep iPhone
          echo ""
          echo "Workspace structure:"
          ls -la

      - name: Build iOS
        working-directory: ./AfterburnerControl
        env:
          DEVELOPER_DIR: /Applications/Xcode_16.1.app/Contents/Developer
        run: |
          cd ios
          echo "Attempting to build with iPhone 15 simulator..."
          xcodebuild -workspace AfterburnerControl.xcworkspace -scheme AfterburnerControl -configuration Release -destination 'platform=iOS Simulator,name=iPhone 15' -derivedDataPath build || {
            echo "iPhone 15 simulator not available, trying generic iOS Simulator..."
            xcodebuild -workspace AfterburnerControl.xcworkspace -scheme AfterburnerControl -configuration Release -destination 'platform=iOS Simulator' -derivedDataPath build
          }
          cd ..

      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: AfterburnerControl/ios/build/
          retention-days: 7
